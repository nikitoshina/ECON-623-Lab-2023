range_scale = .4,
## add some transparency
alpha = .3
) +
coord_cartesian(xlim = c(1.2, NA), clip = "off")
?stat_halfeye
base_dist +
ggdist::stat_halfeye(
adjust = .3, #bw
width = .6,
.width = 0,
justification = -.2,
point_colour = NA
) +
geom_boxplot(
width = .15,
outlier.shape = NA
) +
## add justified jitter from the {gghalves} package
gghalves::geom_half_point(
## draw jitter on the left
side = "l",
## control range of jitter
range_scale = .4,
## add some transparency
alpha = .3
) +
coord_cartesian(xlim = c(1.2, NA), clip = "off")
base_dist +
ggdist::stat_halfeye(
adjust = .5,
width = .6,
## set slab interval to show IQR and 95% data range
.width = c(.5, .95)
) +
ggdist::stat_dots(
side = "left",
dotsize = .8,
justification = 1.05,
binwidth = .3
) +
coord_cartesian(xlim = c(1.2, NA))
base_dist +
ggdist::stat_halfeye(
adjust = .3,
width = .6,
## set slab interval to show IQR and 95% data range
.width = c(.5, .95)
) +
ggdist::stat_dots(
side = "left",
dotsize = .8,
justification = 1.05,
binwidth = .3
) +
coord_cartesian(xlim = c(1.2, NA))
base_dist +
ggdist::stat_halfeye(
adjust = .5,
width = .6,
.width = 0,
justification = -.2,
point_colour = NA
) +
geom_boxplot(
width = .15,
outlier.shape = NA
) +
geom_half_point(
## draw horizontal lines instead of points
shape = "|",
side = "l",
size = 5,
alpha = .2,
transformation = position_identity()
) +
coord_cartesian(xlim = c(1.2, NA), clip = "off")+ coord_flip()
us_spending <- read_csv("data/USFR_StmtNetCost_2017_2022.csv") %>% janitor::clean_names() %>% filter((restatement_flag == "N") & (agency_name != "Total")) %>% select(year = statement_fiscal_year, agency_name, net_cost_in_billions) %>% mutate(net_cost_in_billions = as.numeric(net_cost_in_billions)) %>% group_by(year) %>% mutate(proportion = round(net_cost_in_billions/sum(net_cost_in_billions),2)) %>% ungroup()
spending_plot_data <- us_spending %>% group_by(year) %>% mutate(rank = rank(-1*net_cost_in_billions), agency = ifelse(rank>=5, "Other", agency_name)) %>% count(year,agency,wt = net_cost_in_billions) %>%
mutate(other = agency == "Other") %>%
group_by(other) %>%
arrange(desc(n),.by_group = T) %>%
ungroup() %>%
mutate(order = -1*row_number()) %>%
mutate(agency = recode( agency,
"Department of Veterans Affairs" = "Veterans Affairs",
"Department of Health and Human Services" = "HHS",
"Department of Defense" = "Defense",
"Social Security Administration" = "SSA",
"Department of the Treasury" = "Treasury",
"Interest on Treasury Securities Held by the Public" = "i on Treasuries"
)) %>% mutate(agency = factor(agency,c("Other", "i on Treasuries", "Veterans Affairs", "Defense", "Treasury", "SSA", "HHS")))
spending_plot_data %>%
ggplot(aes(x = year, y = n, fill = agency, label = agency)) +
geom_col(position="stack", show.legend = F) +
scale_fill_manual(values = c("#5E5E5E", "#EF3B2C", "#2CA25F", "#006837", "#F7DC6F", "#00FFFF", "#FFC0CB")) + theme_minimal() + theme(legend.position = "right") + labs(y = "Millions Spent") +
geom_label(size = 3, aes(group = agency), position = position_stack(vjust = 0.5), fill = "white", alpha = 0.5)
spending_plot_data %>%
ggplot(aes(x = year, y = n, fill = agency)) +
geom_col(position="fill", show.legend = T) +
scale_fill_manual(
values = c("#5E5E5E", "#EF3B2C", "#2CA25F", "#006837", "#F7DC6F", "#00FFFF", "#FFC0CB")) +
theme_minimal() +
theme(legend.position = "none") +
labs(y = "Millions Spent", fill = "Department") +
geom_label(aes(x = year, y = n, label = agency, group = agency), size = 3, position = position_fill(vjust = 0.5), fill = "white", alpha = 0.5)
spending_plot_data %>% mutate(agency = factor(agency,c("Defense", "Other", "i on Treasuries", "Veterans Affairs", "Treasury", "HHS", "SSA"))) %>%
ggplot(aes(x = year, y = n, fill = agency)) +
geom_col(position="fill", show.legend = T) +
scale_fill_manual(
values = c("#006837", "#5E5E5E", "#EF3B2C", "#2CA25F",  "#F7DC6F", "#FFC0CB", "#00FFFF")) +
theme_minimal() +
theme(legend.position = "none") +
labs(y = "Millions Spent", fill = "Department") +
geom_label(aes(x = year, y = n, label = agency, group = agency), size = 3, position = position_fill(vjust = 0.5), fill = "white", alpha = 0.5)
spending_plot_data %>%
ggplot(aes(x = year, y = n, fill = agency, label = agency)) +
geom_col(position="stack", show.legend = F) +
scale_fill_manual(values = c("#5E5E5E", "#EF3B2C", "#2CA25F", "#006837", "#F7DC6F", "#00FFFF", "#FFC0CB")) + theme_minimal() + theme(legend.position = "right") + labs(y = "Millions Spent") +
geom_label(size = 3, aes(group = agency), position = position_stack(vjust = 0.5), fill = "white", alpha = 0.5)
spending_plot_data %>%
ggplot(aes(x = year, y = n, fill = agency)) +
geom_col(position="fill", show.legend = T) +
scale_fill_manual(
values = c("#5E5E5E", "#EF3B2C", "#2CA25F", "#006837", "#F7DC6F", "#00FFFF", "#FFC0CB")) +
theme_minimal() +
theme(legend.position = "none") +
labs(y = "Millions Spent", fill = "Department") +
geom_label(aes(x = year, y = n, label = agency, group = agency), size = 3, position = position_fill(vjust = 0.5), fill = "white", alpha = 0.5)
spending_plot_data %>% mutate(agency = factor(agency,c("Defense", "Other", "i on Treasuries", "Veterans Affairs", "Treasury", "HHS", "SSA"))) %>%
ggplot(aes(x = year, y = n, fill = agency)) +
geom_col(position="fill", show.legend = T) +
scale_fill_manual(
values = c("#006837", "#5E5E5E", "#EF3B2C", "#2CA25F",  "#F7DC6F", "#FFC0CB", "#00FFFF")) +
theme_minimal() +
theme(legend.position = "none") +
labs(y = "Millions Spent", fill = "Department") +
geom_label(aes(x = year, y = n, label = agency, group = agency), size = 3, position = position_fill(vjust = 0.5), fill = "white", alpha = 0.5)
pie_1 <- japan_sectors %>%
ggplot(aes(x="", y=n, fill = sector)) +
geom_bar(stat="identity", width=1, color =
"white") +
theme_void()  +
theme(legend.position = "none")
pie_2 <- japan_sectors %>%
ggplot(aes(x="", y=n, fill = sector)) +
geom_bar(stat="identity", width=1, color =
"white") +
coord_polar("y", start=0) +
theme(panel.background = element_rect(fill = "white"))
pie_1 + pie_2
japan_sectors %>%
mutate(sector = ifelse(n<11,"Other",sector)) %>%
count(sector, wt = n) %>%
mutate(other = sector == "Other") %>%
group_by(other) %>%
arrange(desc(n),.by_group = T) %>%
ungroup() %>%
mutate(prop = n / sum(japan_sectors$n) * 100) %>%
mutate(ypos = cumsum(prop)- 0.5*prop ) %>%
mutate(order = -1*row_number()) %>%
ggplot(aes(x="", y=n, fill= fct_reorder(sector, order))) +
geom_bar(stat="identity", width=1, color =
"white") +
coord_polar("y", start=0) +
theme_void() +
theme(legend.position="none") +
geom_text(aes(y = ypos, label = sector), color = c("white","#333333", rep("white",4)), size=6) +
scale_fill_manual(values = c("grey", "#009E73", "#D55E00", "#CC79A7", "#F0E442", "#56B4E9"))
pie_1 <- japan_sectors %>%
ggplot(aes(x="", y=n, fill = sector)) +
geom_bar(stat="identity", width=1) +
theme_void()  +
theme(legend.position = "none")
pie_2 <- japan_sectors %>%
ggplot(aes(x="", y=n, fill = sector)) +
geom_bar(stat="identity", width=1) +
coord_polar("y", start=0) +
theme(panel.background = element_rect(fill = "white"))
pie_1 + pie_2
# waffle_data <- waffle_iron(iris, aes_d(group = Species))
#
# ggplot(waffle_data, aes(x, y, fill = group)) +
#   geom_waffle() +
#   coord_equal() +
#   scale_fill_viridis_d() +
#   theme_waffle() +
#   theme(legend.position = "top", legend.title = element_blank()) +
#   labs(x = element_blank(), y = element_blank())
japan_sectors %>%
# mutate(sector = ifelse(n<11,"Other",sector)) %>%
# count(sector, wt = n) %>%
# mutate(other = sector == "Other") %>%
# group_by(other) %>%
# arrange(desc(n),.by_group = T) %>%
# ungroup() %>%
mutate(other = sector == "Other") %>%
uncount(weights = round(n,0)) %>%
group_by(other) %>%
arrange(desc(n),.by_group = T) %>%
ungroup() %>%
waffle_iron(aes_d(group = sector)) %>%
ggplot( aes(x, y, fill = group))+ geom_waffle() + coord_equal() +
# scale_fill_viridis_d() +
theme_waffle() +
theme(legend.position = "top", legend.title = element_blank()) +
labs(x = element_blank(), y = element_blank()) +
scale_fill_manual(values = c("#CF8F00", "#E52B50", "#003366", "#228B22", "#1E90FF", "#FFD700", "#666666", "#800000", "#9932CC", "#8B0000", "#FFA07A"))
library(treemap)
treemap(japan_export,
index = c("sector","name"),
vSize = "export",
type = "index",
fontsize.labels = c(14,10),
fontcolor.labels = c("black","white"),
fontface.labels = c(2,1),
bg.labels = 0,
align.labels = list(
c("center","center"),
c("left","top")
),
border.col = c("black","white"),
border.lwds = c(3,1),
title = "Japans Export in 2020",
fontsize.title = 14)
iris %>% ggplot(aes(x = Sepal.Length, y = Sepal.Width, color = Species)) + geom_point()
iris %>% ggplot(aes(x = Sepal.Length, y = Sepal.Width, color = Species)) + geom_point() + geom_dl(aes(label = Species), method = "smart.grid")+ theme_minimal()
iris %>% ggplot(aes(x = Sepal.Length, y = Sepal.Width, color = Species)) + geom_point(show.legend = F) + geom_dl(aes(label = Species), method = "smart.grid")+ theme_minimal()
iris %>% ggplot(aes(x = Sepal.Length, y = Sepal.Width, color = Species)) + geom_point(show.legend = F) + geom_dl(aes(label = Species), method = "smart.grid")+ theme_minimal() + labs(x = "Sepal Length", y = "Sepal Width")
iris %>% ggplot(aes(x = Sepal.Length, y = Sepal.Width, color = Species)) + geom_point(show.legend = F) + geom_smooth()+ geom_dl(aes(label = Species), method = "smart.grid")+ theme_minimal() + labs(x = "Sepal Length", y = "Sepal Width")
iris %>% ggplot(aes(x = Sepal.Length, y = Sepal.Width, color = Species)) +
geom_point(show.legend = F) +
geom_smooth(se = G) +
geom_dl(aes(label = Species), method = "smart.grid") +
theme_minimal() +
labs(x = "Sepal Length", y = "Sepal Width")
iris %>% ggplot(aes(x = Sepal.Length, y = Sepal.Width, color = Species)) +
geom_point(show.legend = F) +
geom_smooth(se = F) +
geom_dl(aes(label = Species), method = "smart.grid") +
theme_minimal() +
labs(x = "Sepal Length", y = "Sepal Width")
?geom_smooth
iris %>% ggplot(aes(x = Sepal.Length, y = Sepal.Width, color = Species)) +
geom_point(show.legend = F) +
geom_smooth(se = F, fullrange = T) +
geom_dl(aes(label = Species), method = "smart.grid") +
theme_minimal() +
labs(x = "Sepal Length", y = "Sepal Width")
iris %>% ggplot(aes(x = Sepal.Length, y = Sepal.Width, color = Species)) +
geom_point(show.legend = F) +
geom_smooth(se = F, fullrange = T) +
geom_dl(aes(label = Species), method = "smart.grid") +
theme_minimal() +
labs(x = "Sepal Length", y = "Sepal Width")
iris %>% drop_na() %>% ggplot(aes(x = Sepal.Length, y = Sepal.Width, color = Species)) +
geom_point(show.legend = F) +
geom_smooth(se = F, fullrange = T) +
geom_dl(aes(label = Species), method = "smart.grid") +
theme_minimal() +
labs(x = "Sepal Length", y = "Sepal Width")
iris %>% drop_na() %>% ggplot(aes(x = Sepal.Length, y = Sepal.Width, color = Species)) +
geom_point(show.legend = F) +
geom_smooth(se = F, fullrange = T, show.legend = F) +
geom_dl(aes(label = Species), method = "smart.grid") +
theme_minimal() +
labs(x = "Sepal Length", y = "Sepal Width")
iris %>% drop_na() %>% ggplot(aes(x = Sepal.Length, y = Sepal.Width, color = Species)) +
geom_point(show.legend = F) +
geom_smooth(se = F, fullrange = T, show.legend = F, method = "lm") +
geom_dl(aes(label = Species), method = "smart.grid") +
theme_minimal() +
labs(x = "Sepal Length", y = "Sepal Width")
iris %>% drop_na() %>% ggplot(aes(x = Sepal.Length, y = Sepal.Width, color = Species)) +
geom_point(show.legend = F) +
geom_smooth(se = F, fullrange = F, show.legend = F, method = "lm") +
geom_dl(aes(label = Species), method = "smart.grid") +
theme_minimal() +
labs(x = "Sepal Length", y = "Sepal Width")
iris %>% drop_na() %>% ggplot(aes(x = Sepal.Length, y = Sepal.Width, color = Species)) +
geom_point(show.legend = F) +
geom_smooth(se = F, fullrange = F, show.legend = F) +
geom_dl(aes(label = Species), method = "smart.grid") +
theme_minimal() +
labs(x = "Sepal Length", y = "Sepal Width")
, method = "lm"
iris %>% drop_na() %>% ggplot(aes(x = Sepal.Length, y = Sepal.Width, color = Species)) +
geom_point(show.legend = F) +
geom_smooth(se = F, fullrange = F, show.legend = F, method = "lm", linewidth = 2) +
geom_dl(aes(label = Species), method = "smart.grid") +
theme_minimal() +
labs(x = "Sepal Length", y = "Sepal Width")
scatter_1 <- iris %>% drop_na() %>% ggplot(aes(x = Sepal.Length, y = Sepal.Width, color = Species)) +
geom_point(show.legend = F) +
geom_dl(aes(label = Species), method = "smart.grid") +
theme_minimal() +
labs(x = "Sepal Length", y = "Sepal Width")
scatter_2 <- scatter_1 + geom_smooth(se = F, fullrange = F, show.legend = F, method = "lm", linewidth = 2) +
scatter_1 <- iris %>% drop_na() %>% ggplot(aes(x = Sepal.Length, y = Sepal.Width, color = Species)) +
geom_point(show.legend = F) +
geom_dl(aes(label = Species), method = "smart.grid") +
theme_minimal() +
labs(x = "Sepal Length", y = "Sepal Width")
scatter_2 <- scatter_1 + geom_smooth(se = F, fullrange = F, show.legend = F, method = "lm", linewidth = 2)
scatter_1 + scatter_2
scatter_1 <- iris %>% drop_na() %>% ggplot(aes(x = Sepal.Length, y = Sepal.Width, color = Species)) +
geom_point(show.legend = F) +
geom_dl(aes(label = Species), method = "smart.grid") +
theme_minimal() +
labs(x = "Sepal Length", y = "Sepal Width")
scatter_2 <- scatter_1 + geom_smooth(se = F, fullrange = F, show.legend = F, method = "lm", linewidth = 2) + theme(axis.title.y = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank())
scatter_1 + scatter_2
sp500 <- tribble(
~Year, ~Average_Closing_Price, ~Year_Open, ~Year_High, ~Year_Low, ~Year_Close, ~Annual_Percent_Change,
2023, 4020.94, 3824.14, 4179.76, 3808.10, 3970.04, 3.40,
2022, 4097.49, 4796.56, 4796.56, 3577.03, 3839.50, -19.44,
2021, 4273.41, 3700.65, 4793.06, 3700.65, 4766.18, 26.89,
2020, 3217.86, 3257.85, 3756.07, 2237.40, 3756.07, 16.26,
2019, 2913.36, 2510.03, 3240.02, 2447.89, 3230.78, 28.88,
2018, 2746.21, 2695.81, 2930.75, 2351.10, 2506.85, -6.24,
2017, 2449.08, 2257.83, 2690.16, 2257.83, 2673.61, 19.42,
2016, 2094.65, 2012.66, 2271.72, 1829.08, 2238.83, 9.54,
2015, 2061.07, 2058.20, 2130.82, 1867.61, 2043.94, -0.73,
2014, 1931.38, 1831.98, 2090.57, 1741.89, 2058.90, 11.39,
2013, 1643.80, 1462.42, 1848.36, 1457.15, 1848.36, 29.60,
2012, 1379.61, 1277.06, 1465.77, 1277.06, 1426.19, 13.41,
2011, 1267.64, 1271.87, 1363.61, 1099.23, 1257.60, 0.00,
2010, 1139.97, 1132.99, 1259.78, 1022.58, 1257.64, 12.78,
2009, 948.05, 931.80, 1127.78, 676.53, 1115.10, 23.45,
2008, 1220.04, 1447.16, 1447.16, 752.44, 903.25, -38.49,
2007, 1477.18, 1416.60, 1565.15, 1374.12, 1468.36, 3.53,
2006, 1310.46, 1268.80, 1427.09, 1223.69, 1418.30, 13.62)
sp500_scatter <- sp500 %>%
select(-c(Average_Closing_Price,Year_Open,Annual_Percent_Change)) %>% pivot_longer(-Year) %>% mutate(year_close = name != "Year_Close") %>%
ggplot(aes(x = Year, y = log(value), color = name)) +
geom_point(size = 2) +
geom_dl(aes(label = name), method = "smart.grid") +
theme_minimal() +
theme(legend.position = "none") +
labs(x = element_blank(), y = "log S&P 500")
sp500_line <- sp500 %>%
select(-c(Average_Closing_Price,Year_Open,Annual_Percent_Change)) %>% pivot_longer(-Year) %>% mutate(year_close = name != "Year_Close") %>%
ggplot(aes(x = Year, y = log(value), color = name)) +
geom_line(aes(linetype = year_close),linewidth = 1.5) +
scale_color_manual(values = c("steelblue", "grey", "grey")) +
geom_dl(aes(label = name), method = "smart.grid") +
theme_minimal() +
theme(legend.position = "none") +
labs(x = element_blank(), y = "log S&P 500")
sp500_scatter + sp500_line
sp500_scatter <- sp500 %>%
select(-c(Average_Closing_Price,Year_Open,Annual_Percent_Change)) %>% pivot_longer(-Year) %>% mutate(year_close = name != "Year_Close") %>%
ggplot(aes(x = Year, y = log(value), color = name)) +
geom_point(size = 2) +
geom_dl(aes(label = name), method = "smart.grid") +
theme_minimal() +
theme(legend.position = "none") +
labs(x = element_blank(), y = "log S&P 500")
sp500_line <- sp500 %>%
select(-c(Average_Closing_Price,Year_Open,Annual_Percent_Change)) %>% pivot_longer(-Year) %>% mutate(year_close = name != "Year_Close") %>%
ggplot(aes(x = Year, y = log(value), color = name)) +
geom_line(aes(linetype = year_close),linewidth = 1.5) +
scale_color_manual(values = c("steelblue", "grey", "grey")) +
geom_dl(aes(label = name), method = "smart.grid") +
theme_minimal() +
theme(legend.position = "none") +
labs(x = element_blank(), y = "log S&P 500")
sp500_scatter + sp500_line
waterfall_data <- tribble(
~year, ~bank, ~change,
2017, 2000, 2000,
2018, 1745, -255,
2019, 1930, 185,
2020, 2197, 267,
2021, 2453, 256,
2022, 2300, -153,
) %>% transmute(as.character(year), change)
library(waterfalls)
waterfall(waterfall_data,  calc_total = TRUE,
total_rect_color = "orange",
total_rect_text_color = "white") +
theme_minimal() +
theme(panel.grid = element_blank()) +
labs(y = "Money in Bank", x = NULL)
survey_data <- fetch_survey(surveyID = "SV_bJIs8lwz4CfAAgS",
verbose = TRUE,force_request = TRUE)
survey_data <- fetch_survey(surveyID = "SV_bJIs8lwz4CfAAgS",
verbose = TRUE,force_request = TRUE)
# install.packages("qualtRics")
library("tidyverse")
library("qualtRics")
library("scales")
survey_data <- fetch_survey(surveyID = "SV_bJIs8lwz4CfAAgS",
verbose = TRUE,force_request = TRUE)
survey_data <- survey_data %>% janitor::clean_names()
graph_data <- survey_data %>%select(gender, offer,  decision_81, participant_id, participant_role) %>%
mutate(participant_role = recode(participant_role,"A" = "dictator", "B" = "recipient" ),
decision = recode(decision_81, "1" = "Accepted", "2" = "Declined")) %>%
mutate(interval = cut_width(offer, width = 10, center = 45)) %>%
filter(participant_role == "recipient") %>% count(decision, interval)
graph_data %>%
ggplot(aes(x = interval, y = n, fill = as.factor(decision))) +
geom_col(position = position_stack()) +
theme_minimal(base_size = 20) +
scale_y_continuous(breaks = scales::breaks_extended(n = max(count(graph_data, interval)$n))) +
theme(panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
legend.position = "top") +
labs(x = "Offer size", y = "Count", title = "Results of the Ultimatum Game", fill = "Result")
max(count(graph_data, interval)$n
max(count(graph_data, interval)$n)
graph_data
count(graph_data, interval)
survey_data <- fetch_survey(surveyID = "SV_bJIs8lwz4CfAAgS",
verbose = TRUE,force_request = TRUE)
survey_data <- survey_data %>% janitor::clean_names()
graph_data <- survey_data %>%select(gender, offer,  decision_81, participant_id, participant_role) %>%
mutate(participant_role = recode(participant_role,"A" = "dictator", "B" = "recipient" ),
decision = recode(decision_81, "1" = "Accepted", "2" = "Declined")) %>%
mutate(interval = cut_width(offer, width = 10, center = 45)) %>%
filter(participant_role == "recipient") %>% count(decision, interval)
graph_data %>%
ggplot(aes(x = interval, y = n, fill = as.factor(decision))) +
geom_col(position = position_stack()) +
theme_minimal(base_size = 20) +
scale_y_continuous(breaks = scales::breaks_extended(n = max(graph_data$n))) +
theme(panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
legend.position = "top") +
labs(x = "Offer size", y = "Count", title = "Results of the Ultimatum Game", fill = "Result")
pizza_table <- survey_data[c(22:29,72)] %>% select(-pizzas_6) %>% pivot_longer(-participant_id) %>% count(value) %>% drop_na()
pizza_table %>% ggplot(aes(x = fct_reorder(value, n), y = n)) +
geom_col(fill = "steelblue") +
theme_minimal(base_size = 20) +
scale_y_continuous(breaks = scales::breaks_extended(n = max(pizza_table$n))) +
theme(panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
panel.grid.minor.x = element_blank(),
legend.position = "top") +
labs(x = "Pizza", y = "Count", title = "What Pizzas do you like?") +
coord_flip()
pizza_table <- survey_data[c(22:29,72)] %>% select(-pizzas_6) %>% pivot_longer(-participant_id) %>% count(value) %>% drop_na()
pizza_table %>% ggplot(aes(x = fct_reorder(value, n), y = n)) +
geom_col(fill = "steelblue") +
theme_minimal(base_size = 20) +
scale_y_continuous(breaks = scales::breaks_extended(n = max(pizza_table$n))) +
theme(panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
panel.grid.minor.x = element_blank(),
legend.position = "top") +
labs(x = NULL, y = "Count", title = "What Pizzas do you like?") +
coord_flip()
#|code-fold: true
#|code-summary: "Show the code"
datasauRus::datasaurus_dozen %>% filter(dataset %in% c("away","dino", "star")) %>%
mutate(dataset = str_to_upper(dataset)) %>%
ggplot(aes(x = x, y = y, colour = dataset)) +
geom_point() +
theme_void(base_size = 18) +
theme(legend.position = "none",
strip.text = element_text(face = "bold")) +
facet_wrap(~dataset, ncol = 3) +
coord_fixed(ratio = 0.8)
tibble(
x = list(1, 2:3, 4:6,7:11)
) %>% mutate(length = lengths(x))
?lengths
x <- 2^0.5
x^x
x^x^x
sq_vector <- x
for(i in 100){y <- sq_vector[i]
sq_vector <- c(sq_vector,x^y)}
sq_vector
sq_vector <- x
sq_vector <- x
sq_vector
sq_vector <- x
for(i in 100){
y <- sq_vector[i]
sq_vector <- c(sq_vector,x^y)
}
sq_vector
sq_vector <- x
sq_vector[1]
sq_vector <- x
for(i in 100){
y <- sqrt(x)^sq_vector[i]
sq_vector <- c(sq_vector,y)
}
sq_vector
sq_vector <- x
sq_vector <- x
for(i in 100){
y <- sqrt(2)^sq_vector[i]
sq_vector <- c(sq_vector,y)
}
sq_vector
sq_vector <- x
sqrt(2)^sq_vector[i]
sq_vector[i]
sqrt(2)^sq_vector[1]
print(i)
sq_vector <- x
for(i in 1:100){
print(i)
y <- sqrt(2)^sq_vector[i]
sq_vector <- c(sq_vector,y)
}
sq_vector
